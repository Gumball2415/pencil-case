usage: ppu_cvbs_preview.py [-h] [-d] [-cxp COLOR_CLOCK_PHASE] [-raw]
                           [-pal PALETTE] [-ppu {2C02,2C07}]
                           [-phd PHASE_DISTORTION]
                           [-filt {notch,box,2-line,3-line}] [-full]
                           [-frames FRAMES] [-avg] [-noskipdot]
                           input

NES PPU composite video shader previewer

positional arguments:
  input                 input 256x240 indexed .png screenshot. will save
                        output as input_ppucvbs_ph_x.png

options:
  -h, --help            show this help message and exit
  -d, --debug           debug messages
  -cxp COLOR_CLOCK_PHASE, --color_clock_phase COLOR_CLOCK_PHASE
                        starting clock phase of first frame. will affect all
                        other phases. range: 0-11
  -raw, --raw_ppu_px    input image is instead a 256x240 uint16_t array of raw
                        9-bit PPU pixels. format: EEELLCCCC
  -pal PALETTE, --palette PALETTE
                        input 192-byte .pal file
  -ppu {2C02,2C07}, --ppu {2C02,2C07}
                        PPU chip used for generating colors. default = 2C02
  -phd PHASE_DISTORTION, --phase_distortion PHASE_DISTORTION
                        amount of voltage-dependent impedance for RC lowpass,
                        where RC = "amount * (level/composite_white) * 1e-8".
                        this will also desaturate and hue shift the resulting
                        colors nonlinearly. a value of 4 very roughly
                        corresponds to a -5 degree delta per luma row. default
                        = 4
  -filt {notch,box,2-line,3-line}, --decoding_filter {notch,box,2-line,3-line}
                        choose decoding method to filter chroma and luma.
                        default = notch.
  -full, --full_resolution
                        store the full framebuffer
  -frames FRAMES        render x consecutive frames. range: 1-3. default = 1
  -avg, --average       use with -frames argument. averages all rendered
                        frames into one. will save output as
                        input_ppucvbs_ph_avg_x.png
  -noskipdot            turns off skipped dot rendering. equivalent to
                        rendering on 2C02s

version 0.2.2
